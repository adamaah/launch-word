# This file describes an application. You can have multiple applications
# in the same project.

# The name of this app. Must be unique within a project.
name: app

# The runtime the application uses.
type: "php:7.4"

# Configuration of the build of the application.
build:
    flavor: composer

dependencies:
    php:
        composer/composer: '^2'
        wp-cli/wp-cli: "^2.2.0"

variables:
    env:
        # Update these for your desired NVM and Node versions.
        NVM_VERSION: v0.38.0
        NODE_VERSION: v10.19.0

hooks:
    build: |
        set -e
        # Install NVM AND NODE
        unset NPM_CONFIG_PREFIX
        export NVM_DIR="$PLATFORM_APP_DIR/.nvm"
        # install.sh will automatically install NodeJS based on the presence of $NODE_VERSION
        curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

        npm install -g yarn cipm

        # Copy manually-provided plugins into the plugins directory.
        # This allows manually-provided and composer-provided plugins to coexist.
        rsync -a src-wp-content/* wordpress/wp-content/
        rsync -a advanced-cache.php wordpress/wp-content/advanced-cache.php
        #rsync -a src-wp-content/plugins/* wordpress/wp-content/plugins/
        #rsync -a src-wp-content/themes/* wordpress/wp-content/themes/
        cd wordpress/wp-content/themes/biomerieux; composer install --no-dev; node -v; yarn -v; npm install; yarn build:production; cd ~;

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: "db:mysql"

# The configuration of app when it is exposed to the web.
web:
    locations:
        "/":
            # The public directory of the app, relative to its root.
            root: "wordpress"
            # The front-controller script to send non-static requests to.
            passthru: "/index.php"
            # Wordpress has multiple roots (wp-admin) so the following is required
            index:
                - "index.php"
            # The number of seconds whitelisted (static) content should be cached.
            expires: 600
            scripts: true
            allow: true
            rules:
                ^/composer\.json:
                    allow: false
                ^/license\.txt$:
                    allow: false
                ^/readme\.html$:
                    allow: false
        "/wp-content/cache":
            root: "wordpress/wp-content/cache"
            scripts: false
            allow: false
        "/wp-content/uploads":
            root: "wordpress/wp-content/uploads"
            scripts: false
            allow: true

# The size of the persistent disk of the application (in MB).
disk: 2048

# The mounts that will be performed when the package is deployed.
mounts:
    "wordpress/wp-content/cache":
        source: local
        source_path: "cache"
    "wordpress/wp-content/uploads":
        source: local
        source_path: "uploads"
    #"wordpress/wp-content/themes/biomerieux/dist":
    #    source: local
    #    source_path: "theme-dist"
    "wordpress/wp-content/ai1wm-backups":
        source: local
        source_path: "ai1wm-backups"
    "wordpress/wp-content/wp-rocket-config":
        source: local
        source_path: "wp-rocket-config"
    "wordpress/wp-content/plugins/all-in-one-wp-migration/storage":
        source: local
        source_path: "all-in-one-wp-migration_storage"

        


